<project name="Lumberjack" default="dist" basedir=".">
  <description>simple example build file</description>

  <property name="src" location="src" />
  <property name="build" location="build" />
  <property name="dist" location="dist" />

  <path id="project.class.path">
    <fileset dir="lib">
      <include name="**/*.jar" />
    </fileset>
  </path>

  <target name="clean" description="clean up">
    <delete dir="${build}" />
    <delete dir="${dist}" />
  </target>

  <target name="init">
    <tstamp/>
    <mkdir dir="${build}"/>
  </target>

  <target name="compile" depends="init" description="compile the source">
    <javac srcdir="${src}" destdir="${build}" compiler="modern">
      <classpath refid="project.class.path" />
    </javac>

  </target>

  <target name="dist" depends="compile" description="generate the distribution">
    <pathconvert property="mf.classpath" pathsep=" ">
      <path refid="project.class.path" />
      <map from="${basedir}/lib" to="../lib" />
    </pathconvert>

    <!-- Bundle compiled Lumberjack code into its own JAR. -->
    <mkdir dir="${dist}/tmp" />
    <jar jarfile="${dist}/tmp/lumberjack-standalone-${DSTAMP}.jar" basedir="${build}" />

    <!-- Prepare libraries that we depend on so they're ready to bundle. -->
    <copy todir="${dist}/lib">
      <fileset dir="lib" />
    </copy>

    <jar destfile="${dist}/tmp/lumberjack_temp.jar" filesetmanifest="skip">
      <zipgroupfileset dir="${dist}/tmp" includes="*.jar" />
      <zipgroupfileset dir="${dist}/lib" includes="*.jar" />
      <manifest>
        <attribute name="Built-By" value="Joshua Go" />
        <attribute name="Main-Class" value="net.refinition.lumberjack.Main" />
        <attribute name="Class-Path" value="${mf.classpath} ." />
      </manifest>
    </jar>

    <zip destfile="${dist}/lumberjack-${DSTAMP}.jar">
      <zipfileset src="${dist}/tmp/lumberjack_temp.jar" excludes="META-INF/*.SF, META-INF/*.DSA, META-INF/*.RSA" />
    </zip>

    <delete dir="${dist}/tmp" />
    <delete dir="${dist}/lib" />
  </target>

</project>
